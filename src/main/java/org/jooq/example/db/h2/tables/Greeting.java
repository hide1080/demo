/*
 * This file is generated by jOOQ.
*/
package org.jooq.example.db.h2.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.example.db.h2.Public;
import org.jooq.example.db.h2.tables.records.GreetingRecord;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Greeting extends TableImpl<GreetingRecord> {

    private static final long serialVersionUID = 856943471;

    /**
     * The reference instance of <code>PUBLIC.GREETING</code>
     */
    public static final Greeting GREETING = new Greeting();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GreetingRecord> getRecordType() {
        return GreetingRecord.class;
    }

    /**
     * The column <code>PUBLIC.GREETING.ID</code>.
     */
    public final TableField<GreetingRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.GREETING.CONTENT</code>.
     */
    public final TableField<GreetingRecord, String> CONTENT = createField("CONTENT", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * Create a <code>PUBLIC.GREETING</code> table reference
     */
    public Greeting() {
        this("GREETING", null);
    }

    /**
     * Create an aliased <code>PUBLIC.GREETING</code> table reference
     */
    public Greeting(String alias) {
        this(alias, GREETING);
    }

    private Greeting(String alias, Table<GreetingRecord> aliased) {
        this(alias, aliased, null);
    }

    private Greeting(String alias, Table<GreetingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Greeting as(String alias) {
        return new Greeting(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Greeting rename(String name) {
        return new Greeting(name, null);
    }
}
